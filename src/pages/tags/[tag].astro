---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../posts/*.md');

  const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat(2))];
  console.log(uniqueTags);

  // Each key in the params object should match the name of the dynamic segment in the route file:

// If the file is [tag].astro, then you need a key called tag in the params object.
// If the file was [category]/[post].astro, you'd need both category and post keys in the params object.

  return [
    {params: {tag: "astro"}, props: {posts: allPosts}},
    {params: {tag: "successes"}, props: {posts: allPosts}},
    {params: {tag: "community"}, props: {posts: allPosts}},
    {params: {tag: "blogging"}, props: {posts: allPosts}},
    {params: {tag: "setbacks"}, props: {posts: allPosts}},
    {params: {tag: "learning in public"}, props: {posts: allPosts}}
  ];
}

const { tag } = Astro.params;
const { posts } = Astro.props;
const filteredPosts = posts.filter((post) => post.frontmatter.tags?.includes(tag));
---

<BaseLayout pageTitle = {tag}>
  <p>Posts tagged with{tag}</p>
  {filteredPosts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
</BaseLayout>